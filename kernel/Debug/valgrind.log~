==9552== Memcheck, a memory error detector
==9552== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==9552== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==9552== Command: ./kernel /home/utnso/workspace/kernel/archivo.conf
==9552== Parent PID: 1528
==9552== 
==9552== Use of uninitialised value of size 4
==9552==    at 0x40B64AB: _itoa_word (_itoa.c:195)
==9552==    by 0x40BA5EA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0xBEA9DECF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40B64B3: _itoa_word (_itoa.c:195)
==9552==    by 0x40BA5EA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0xBEA9DECF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40BB4BA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0xBEA9DECF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40B9D30: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0xBEA9DECF: ???
==9552== 
==9552== Use of uninitialised value of size 4
==9552==    at 0x40B64AB: _itoa_word (_itoa.c:195)
==9552==    by 0x40BA5EA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0x42238BF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40B64B3: _itoa_word (_itoa.c:195)
==9552==    by 0x40BA5EA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0x42238BF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40BB4BA: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0x42238BF: ???
==9552== 
==9552== Conditional jump or move depends on uninitialised value(s)
==9552==    at 0x40B9D30: vfprintf (vfprintf.c:1629)
==9552==    by 0x40DE26A: vsnprintf (vsnprintf.c:120)
==9552==    by 0x42238BF: ???
==9552== 
==9552== Thread 7:
==9552== Invalid read of size 1
==9552==    at 0x402E5DA: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==9552==    by 0x40465D7: deserializar_mensaje_excepcion (in /usr/lib/libRutinas.so)
==9552==    by 0x804A153: imprimirMensajeDeCPU (pcp.c:79)
==9552==    by 0x804A1A1: opHandshakeKernelCPU (pcp.c:86)
==9552==    by 0x804B1C0: recibirCPU (pcp.c:431)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552==  Address 0x4227cb4 is 0 bytes after a block of size 12 alloc'd
==9552==    at 0x402CB7A: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==9552==    by 0x4046AB2: deserializar_body (in /usr/lib/libRutinas.so)
==9552==    by 0x4046C7F: recibir (in /usr/lib/libRutinas.so)
==9552==    by 0x4046B89: recibir_paquete (in /usr/lib/libRutinas.so)
==9552==    by 0x804AF88: recibirCPU (pcp.c:408)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552== 
==9552== Invalid read of size 1
==9552==    at 0x402E5DA: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==9552==    by 0x40465D7: deserializar_mensaje_excepcion (in /usr/lib/libRutinas.so)
==9552==    by 0x804A153: imprimirMensajeDeCPU (pcp.c:79)
==9552==    by 0x804A217: opRecibiACKDeCPU (pcp.c:105)
==9552==    by 0x804B1C0: recibirCPU (pcp.c:431)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552==  Address 0x4227f4c is 0 bytes after a block of size 12 alloc'd
==9552==    at 0x402CB7A: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==9552==    by 0x4046AB2: deserializar_body (in /usr/lib/libRutinas.so)
==9552==    by 0x4046C7F: recibir (in /usr/lib/libRutinas.so)
==9552==    by 0x4046B89: recibir_paquete (in /usr/lib/libRutinas.so)
==9552==    by 0x804AF88: recibirCPU (pcp.c:408)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552== 
==9552== Thread 8:
==9552== Syscall param socketcall.send(msg) points to uninitialised byte(s)
==9552==    at 0x4060E88: send (socket.S:100)
==9552==    by 0x804A300: enviar_pcb_a_cpu (pcp.c:127)
==9552==    by 0x804B2D5: pasarListosAEjecucion (pcp.c:458)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552==  Address 0x422e30a is 18 bytes inside a block of size 42 alloc'd
==9552==    at 0x402CB7A: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==9552==    by 0x4046917: serializar_paquete (in /usr/lib/libRutinas.so)
==9552==    by 0x4046B15: enviar_paquete (in /usr/lib/libRutinas.so)
==9552==    by 0x804A300: enviar_pcb_a_cpu (pcp.c:127)
==9552==    by 0x804B2D5: pasarListosAEjecucion (pcp.c:458)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552== 
==9552== Thread 6:
==9552== Invalid read of size 4
==9552==    at 0x804C261: hiloSacaExit (plp.c:377)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9552== 
==9552== 
==9552== Process terminating with default action of signal 11 (SIGSEGV)
==9552==  Access not within mapped region at address 0x0
==9552==    at 0x804C261: hiloSacaExit (plp.c:377)
==9552==    by 0x4059D4B: start_thread (pthread_create.c:308)
==9552==    by 0x4162D3D: clone (clone.S:130)
==9552==  If you believe this happened as a result of a stack
==9552==  overflow in your program's main thread (unlikely but
==9552==  possible), you can try to increase the size of the
==9552==  main thread stack using the --main-stacksize= flag.
==9552==  The main thread stack size used in this run was 8388608.
==9552== 
==9552== HEAP SUMMARY:
==9552==     in use at exit: 6,068 bytes in 245 blocks
==9552==   total heap usage: 865 allocs, 620 frees, 20,510 bytes allocated
==9552== 
==9552== LEAK SUMMARY:
==9552==    definitely lost: 1,539 bytes in 76 blocks
==9552==    indirectly lost: 665 bytes in 40 blocks
==9552==      possibly lost: 1,360 bytes in 10 blocks
==9552==    still reachable: 2,504 bytes in 119 blocks
==9552==         suppressed: 0 bytes in 0 blocks
==9552== Rerun with --leak-check=full to see details of leaked memory
==9552== 
==9552== For counts of detected and suppressed errors, rerun with: -v
==9552== Use --track-origins=yes to see where uninitialised values come from
==9552== ERROR SUMMARY: 12 errors from 12 contexts (suppressed: 0 from 0)
